@model List<UserVM>


<style>
    .form-inline .form-group {
        display: flex;
        align-items: center;
        margin-bottom: 0;
    }

    .select-smaller {
        width: auto;
        min-width: 111.5px;
    }

    .btn-danger {
        padding: 0.375rem 0.75rem;
        line-height: 1.5;
    }

    .table-responsive {
        margin-top: 20px;

        @@media (max-width: 768px) {
            .form-inline {
                flex-direction: column;
                align-items: start;
            }

            .form-group {
                margin-bottom: 10px;
            }
        }
</style>

<div class="container">
    @if (User.Identity.IsAuthenticated)
    {
        if (User.IsInRole("SuperAdmin"))
        {
            <div class="create-category">
                <a asp-action="AddRole" class="btn btn-success text-white mb-3 mx-3">Add Role</a>
            </div>
        }
    }
    <div class="table-responsive table--no-card m-b-30">
        <table class="table table-borderless table-striped table-earning">
            <thead>
                <tr>
                    <th>Fullname</th>
                    <th>Username</th>
                    <th>Email</th>
                    <th>Roles</th>
                    <th>Remove</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.FullName</td>
                        <td>@item.UserName</td>
                        <td>@item.Email</td>
                        <td>@item.Roles</td>
                        <td>
                            <form asp-action="RemoveRole" method="post" class="form-inline">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="UserId" value="@item.UserId" />
                                <select name="RoleName" class="form-control select-smaller">
                                    @foreach (var role in item.UserRoles)
                                    {
                                        <option value="@role">@role</option>
                                    }
                                </select>
                                <button type="submit" class="btn btn-danger remove-role-btn">Remove Role</button>
                            </form>


                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.querySelectorAll('.remove-role-btn').forEach(button => {
        button.addEventListener('click', function (event) {
            event.preventDefault();  // Prevent the default form submission
            const form = this.closest('form');
            const userId = form.querySelector('input[name="UserId"]').value;

            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, remove it!'
            }).then((result) => {
                if (result.isConfirmed) {

                  fetch(`/Admin/User/GetRoleCount?userId=${userId}`)
    .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.json();
    })
    .then(data => {
        if (data.roleCount > 1) {
            form.submit();
        } else {
            Swal.fire('Error', 'Cannot remove the last remaining role.', 'error');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        Swal.fire('Error', 'An error occurred while checking roles.', 'error');
    });

                }
            });
        });
    });
</script>
