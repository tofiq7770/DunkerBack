
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
     
    <title>Dunker – Fashion and Clothing Shop Theme</title>
    <link rel="shortcut icon"
          href="~/assets/img/cropped-favicon-32x32.png"
          type="image/x-icon" />
    <link rel="shortcut icon"
          href="~/assets/img/cropped-favicon-32x32.png"
          type="image/x-icon" />
    <!-- Font Awesome -->
    <link rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css"
          integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA=="
          crossorigin="anonymous"
          referrerpolicy="no-referrer" />
    <link rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/jQuery.mmenu/9.3.0/mmenu.min.css"
          integrity="sha512-nNatP1G6CEh43irXY/GN4cDcLRX/R0jAYAV/ulFZcotSXcuIQE5Do4TuDOYNAD2SCIpmIbaYSllyjTysSCkpEw=="
          crossorigin="anonymous"
          referrerpolicy="no-referrer" />

    <!-- Swiper -->
    <link rel="stylesheet"
          href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
    <!-- Bootstrap 5 -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
          rel="stylesheet"
          integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"
          crossorigin="anonymous" />

    <!-- Add this in the <head> of your document -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-zoom/1.7.21/jquery.zoom.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-zoom/1.7.21/jquery.zoom.min.js"></script>

    <!-- CSS -->
    <link rel="stylesheet" href="~/assets/css/main.css" />
    <link rel="stylesheet" href="~/assets/css/shop.css" />

</head>

<body>

    @await Component.InvokeAsync("Header")

    @RenderBody()

    @await Component.InvokeAsync("Footer")
     
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <!-- SwiperJS -->
    <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>

    <!-- Split Type  -->
    <script src="
    https://cdn.jsdelivr.net/npm/split-type@0.3.4/umd/index.min.js
    "></script>

    <!-- SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

    <!-- GSAP JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"
            integrity="sha512-16esztaSRplJROstbIIdwX3N97V1+pZvV33ABoG1H2OyTttBxEGkTsoIVsiP1iaTtM8b3+hu2kB6pQ4Clr5yug=="
            crossorigin="anonymous"
            referrerpolicy="no-referrer"></script>

    <!-- axios cdn  -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.6.1/axios.min.js"></script>

    <!-- generate card js  -->

    <script src="~/assets/js/tab.js"></script>
    <script src="~/assets/js/script.js"></script>


</body>
</html>


<!-- Shop section End -->
<script>


        //Basket and Wishlist

            document.addEventListener('DOMContentLoaded', () => {
        document.querySelectorAll('.add-to-fav-button').forEach(button => {
            button.addEventListener('click', async function () {
                const productId = this.getAttribute('data-product-id');
                const buttonElement = this;
                const svgElement = buttonElement.querySelector('svg');

                try {
                    const response = await fetch('/Wishlist/Add', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: JSON.stringify({ ProductId: parseInt(productId) })
                    });

                    const result = await response.json();

                    if (response.ok) {
                        if (result.success) {
                            Swal.fire({
                                title: 'Success!',
                                text: result.message,
                                icon: 'success',
                                timer: 1200,
                                showConfirmButton: false
                            });

                            if (result.alreadyInWishlist) {
                                buttonElement.classList.add('already-in-wishlist');
                                svgElement.style.fill = 'white';
                                Swal.fire({
                                    title: 'Already in Wishlist!',
                                    text: 'This product is already in your wishlist.',
                                    icon: 'info',
                                    timer: 1200,
                                    showConfirmButton: false
                                });
                            } else {
                                buttonElement.classList.add('already-in-wishlist');
                                svgElement.style.fill = 'white';
                            }
                        } else {
                            // Check for a redirect URL
                            if (result.redirectUrl) {
                                window.location.href = result.redirectUrl; // Redirect to login page
                            } else {
                                Swal.fire({
                                    title: 'Error!',
                                    text: result.message,
                                    icon: 'error',
                                    timer: 1200,
                                    showConfirmButton: false
                                });
                            }
                        }
                    } else {
                        Swal.fire({
                            title: 'Error!',
                            text: 'Failed to add product to wishlist. Please try again later.',
                            icon: 'error',
                            timer: 1200,
                            showConfirmButton: false
                        });
                    }
                } catch (error) {
                    console.error('Network error:', error);
                    Swal.fire({
                        title: 'Network Error!',
                        text: 'An error occurred. Please try again.',
                        icon: 'error',
                        timer: 1200,
                        showConfirmButton: false
                    });
                }
            });
        });
    });






    document.querySelectorAll('.add-to-basket-button').forEach(button => {
        button.addEventListener('click', async function () {
            const productId = this.getAttribute('data-product-id');

            try {
                const response = await fetch('/Basket/Add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: JSON.stringify(productId)
                });

                const result = await response.json();

                if (response.ok) {
                    if (result.redirectUrl) {
                        // Handle redirection if provided
                        Swal.fire({
                            title: 'Login Required',
                            text: 'You need to be logged in to add items to your basket.',
                            icon: 'warning',
                            showConfirmButton: true,
                            confirmButtonText: 'Login',
                            onClose: () => {
                                window.location.href = result.redirectUrl; // Redirect to login
                            }
                        });
                    } else {
                        Swal.fire({
                            title: 'Success!',
                            text: result.message,
                            icon: 'success',
                            timer: 1200,
                            showConfirmButton: false
                        });

                        document.querySelector('.count-basket').textContent = result.uniqueProductCount;

                        updateBasketUI();
                    }
                } else {
                    Swal.fire({
                        title: 'Error!',
                        text: 'Failed to add product to basket. ' + result.message,
                        icon: 'error',
                        timer: 1200,
                        showConfirmButton: false
                    });
                }
            } catch (error) {
                console.error('Network error:', error);
                Swal.fire({
                    title: 'Network Error!',
                    text: 'An error occurred. Please try again.',
                    icon: 'error',
                    timer: 1200,
                    showConfirmButton: false
                });
            }
        });
    });

    function updateBasketUI() {
        // Implement this function to refresh the basket display, count items, etc.
    }


                        const debounce = (func, delay) => {
                            let timeout;
                            return function (...args) {
                                clearTimeout(timeout);
                                timeout = setTimeout(() => func.apply(this, args), delay);
                            };
                        };

                        const handleButtonClick = debounce(async function () {
                        }, 300);

                        document.addEventListener('DOMContentLoaded', () => {
                            document.querySelectorAll('.add-to-fav-button').forEach(button => {
                                button.addEventListener('click', handleButtonClick);
                            });
                        });






</script> 
