@using Domain.Entities
@using DunkerFinal.ViewModels.Shop
@using System.Security.Claims

@model ShopVM


<style>

    .add-to-basket-button {
        font-size: 14px !important;
        padding: 20px 70px !important;
        background: transparent !important;
        border: 2px solid #000 !important;
        font-weight: 600 !important;
        cursor: pointer !important;
        transition: background-color 0.4s ease-in !important, color 0.4s ease-in !important;
        position: unset !important;
        display: flex !important;
        align-items: center !important;
        justify-content: center !important;
        white-space: nowrap !important; /* Ensure text does not wrap */
    }

    .review {
        margin-bottom: 30px;
        padding: 20px;
        border: 1px solid #e2e2e2;
        border-radius: 8px;
        background-color: #f9f9f9;
        position: relative;
    }

    .delete-comment-btn {
        position: absolute;
        top: 10px;
        right: 10px;
        border: none;
        color: #d9534f;
    }

        .delete-comment-btn:hover {
            color: #c9302c;
            background-color: transparent;
        }

    .add-to-basket-button {
        width: 55px !important;
        height: 55px !important;
        background-color: white !important;
        border: none !important;
        border-radius: 0 !important;
    }

        .add-to-basket-button span {
            margin-right: 8px !important; /* Adjust spacing between text and icon */
            display: inline-block !important; /* Ensure the span acts as an inline element */
            white-space: nowrap !important; /* Prevent line breaks within the span */
        }

        .add-to-basket-button:hover {
            background-color: #000 !important;
            color: #fff !important;
        }

</style>
<!-- Breadcrumb Navigation Start -->
<nav id="breadcrumb">
    <span><a asp-action="index" asp-controller="Home">HOME</a></span>
    <span class="line">|</span>
    <span><a asp-action="index" asp-controller="Home" class="text-dark">@Model.Product.Name</a></span>
</nav>
<!-- Breadcrumb Navigation End -->
<!-- Main Start -->
<main id="main">
    <!-- Detail Product Section Start -->
    <section id="detail-product">
        <div class="row g-5">
            <div class="col-lg-6 col-12" style="width:44%;">
                <div class="image-gallery">
                    <div class="zoom-img">
                        <div class="zoomist-container">
                            <!-- zoomist-wrapper is required -->
                            <div class="zoomist-wrapper">
                                <!-- zoomist-image is required -->
                                <div class="zoomist-image">
                                    <img src="~/assets/img/@Model.Product.ProductImages.FirstOrDefault(m=>m.IsMain).Image"
                                         alt="Product"
                                         id="zoom-img" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="gallery-items">
                        @if (Model.Product.ProductImages.Count() > 1)
                        {
                            @foreach (var item in Model.Product.ProductImages)
                            {
                                <div class="gallery-item">
                                    <img src="~/assets/img/@item.Image"
                                 alt="Product"
                                 class="gallery-img" />
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
            <div class="col-lg-6 col-12">
                <div class="product-content">
                    <div class="product-heading">
                        <h1>@Model.Product.Name</h1>
                        <span>$@Model.Product.Price</span>
                        <p>
                            @Model.Product.Description
                        </p>
                    </div>
                    <div class="product-actions">
                        <button class="add-to-basket-button" data-product-id="@Model.Product.Id">
                            <span>ADD TO CART</span> <i class="fa-solid fa-basket-shopping"></i>
                        </button>

                    </div>
                    <div class="product-info">
                        <div class="share">
                            <a href="#" class="fs-5 py-5 d-inline-block">
                                <i class="fa-solid fa-square-share-nodes"></i>
                            </a>
                        </div>
                        <div class="product-stats">
                            <div class="sku">
                                <span>SKU:</span>
                                <a href="#">@Model.Product.SKU</a>
                            </div>
                            <div class="category">
                                <span>CATEGORY:</span>
                                <a href="#">@Model.Product.Category.Name </a>
                            </div>
                            <div class="category">
                                <span>BRAND:</span>
                                <a href="#">@Model.Product.Brand.Name  </a>
                            </div>
                            <div class="tag">
                                <span>TAG:</span>
                                <a href="#"> @string.Join(", ", Model.Product.ProductTags.Select(m => m.Tag.Name))</a>
                            </div>
                            <div class="tag">
                                <span>Color:</span>
                                <a href="#"> @string.Join(", ", Model.Product.ProductColors.Select(m => m.Color.Name))</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-12 pt-5">
                <div class="product-description">
                    <div class="product-description-header">
                        <ul class="tab-items" id="tabItems" style="list-style: none; display: flex; padding: 0; margin: 0; border-bottom: 2px solid #e2e2e2;">
                            <li class="tab-item" style="margin-right: 30px;">
                                <a href="#" class="tab-link" data-tab="description" style="text-decoration: none; font-size: 16px; color: #333; padding-bottom: 10px; display: inline-block; border-bottom: 3px solid transparent;">DESCRIPTION</a>
                            </li>
                            <li class="tab-item">
                                @{
                                    var reviewCount = Model.Product.Reviews?.Count ?? 0;
                                }

                                <a href="#" class="tab-link tab-links" data-tab="additional-info" style="text-decoration: none; font-size: 16px; color: #333; padding-bottom: 10px; display: inline-block; border-bottom: 3px solid transparent;">
                                    REVIEWS <span id="reviewCount">@reviewCount</span>
                                </a>
                            </li>
                        </ul>
                    </div>
                    <div class="tabs-content pt-4" id="tabContent">
                        <div class="tab" data-tab="description">
                            <p class="fs-5" style="font-size: 18px; line-height: 1.6; color: #555;">
                                @Model.Product.Description
                            </p>
                        </div>
                        <div class="tab d-none" data-tab="additional-info">
                            <div class="product-stats">
                                <div class="container mt-5">
                                    <div id="reviewContainer">
                                        @if (Model.Product.Reviews != null && Model.Product.Reviews.Any())
                                        {
                                            @foreach (var item in Model.Product.Reviews)
                                            {
                                                <div class="review" style="margin-bottom: 30px; padding: 20px; border: 1px solid #e2e2e2; border-radius: 8px; background-color: #f9f9f9;">
                                                    <div class="d-flex align-items-start">
                                                        <img src="@Url.Content("~/assets/img/User.png")" alt="User Avatar" class="rounded-circle mr-3" style="width: 70px; height: 70px; object-fit: cover; margin-right: 20px;">
                                                        <div class="flex-grow-1">
                                                            <p class="mb-1 text-muted" style="margin: 0; color: #777; font-size: 14px;">@item.CreatedTime.ToString("MMMM dd, yyyy")</p>
                                                            <h5 class="font-weight-bold mb-1" style="margin: 5px 0; font-size: 18px; color: #333;">@item.AppUser.FullName</h5>
                                                            <p style="font-size: 16px; color: #555; margin-bottom: 10px;">@item.Message</p>
                                                            <div class="stars" style="font-size: 18px;">
                                                            </div>
                                                            @if (item.AppUser.Id == User.FindFirstValue(ClaimTypes.NameIdentifier))
                                                            {

                                                                <button class="delete-comment-btn btn btn-outline-danger btn-sm mt-2 float-right" data-comment-id="@item.Id">
                                                                    <i class="fas fa-trash-alt"></i> Delete
                                                                </button>
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>


                    </div>
                </div>
            </div>

            <!-- Form for adding a review -->
            <form id="reviewForm" method="post" action="@Url.Action("AddComment", "Shop")">
                @Html.AntiForgeryToken()
                <input type="hidden" id="productId" name="productId" value="@Model.Product.Id">

                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label for="name">Your Name *</label>
                        <input type="text" class="form-control" id="name" name="name" value="@Model.UserName" placeholder="Your Name" required>
                    </div>
                    <div class="form-group col-md-6">
                        <label for="email">Your Email *</label>
                        <input type="email" class="form-control" id="email" name="email" value="@Model.UserEmail" placeholder="Your Email" required>
                    </div>
                </div>
                <div class="form-group">
                    <label for="review">Your Review *</label>
                    <textarea class="form-control" id="review" name="message" rows="4" placeholder="Your Review" required></textarea>
                </div>
                <div class="form-group">
                    <label for="rating">Please rate:</label>
                    <div id="rating">
                    </div>
                </div>
                <button type="submit" class="btn btn-outline-success">Post Comment</button>
            </form>





        </div>
    </section>
    <!-- Detail Product Section End -->
    <!-- Related Products Section Start -->
    @*  <section id="related-products">
        <div class="title">
        <h2>RELATED PRODUCTS</h2>
        </div>
        <div class="featured-products-container">
        <div class="row justify-content-center">
        </div>
        </div>
        </section>*@
</main>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>

     $('#reviewForm').on('submit', function(event) {
    event.preventDefault(); 

    let formData = $(this).serialize();  

    $.ajax({
        url: $(this).attr('action'),
        type: 'POST',
        data: formData,
        success: function(response) {
            if (response.success) {
                let reviewHtml = `
                    <div class="review" style="margin-bottom: 30px; padding: 20px; border: 1px solid #e2e2e2; border-radius: 8px; background-color: #f9f9f9;">
                        <div class="d-flex align-items-start">
                            <img src="@Url.Content("~/assets/img/User.png")" alt="User Avatar" class="rounded-circle mr-3" style="width: 70px; height: 70px; object-fit: cover; margin-right: 20px;">
                            <div class="flex-grow-1">
                                <p class="mb-1 text-muted" style="margin: 0; color: #777; font-size: 14px;">${new Date().toLocaleDateString()}</p>
                                <h5 class="font-weight-bold mb-1" style="margin: 5px 0; font-size: 18px; color: #333;">${$('#name').val()}</h5>
                                <p style="font-size: 16px; color: #555; margin-bottom: 10px;">${$('#review').val()}</p>
                                <div class="stars" style="font-size: 18px;">
                                    ${'<span class="text-warning" style="color: #ffc107;">&#9733;</span>'.repeat($('input[name="rating"]:checked').val())}
                                    ${'<span class="text-secondary">&#9733;</span>'.repeat(5 - $('input[name="rating"]:checked').val())}
                                </div>
                                <button class="delete-comment-btn btn btn-outline-danger btn-sm mt-2 float-right" data-comment-id="${response.reviewId}">
                                    <i class="fas fa-trash-alt"></i> Delete
                                </button>
                            </div>
                        </div>
                    </div>
                `;
                $('#reviewContainer').prepend(reviewHtml);
                $('#reviewForm')[0].reset();
                updateReviewCount();
            } else {
                alert(response.message);
            }
        },
        error: function(xhr, status, error) {
            alert('An error occurred: ' + error);
        }
    });
});


    function updateReviewCount() {
        let reviewCount = $('#reviewContainer .review').length;
        $('#reviewCount').text(reviewCount);
    }




</script>

<script>
    $(document).on('click', '.delete-comment-btn', function () {
    const commentId = $(this).data('comment-id');
    const deleteUrl = '@Url.Action("DeleteComment", "Shop")';  

    Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, delete it!'
    }).then((result) => {
        if (result.isConfirmed) {
            $.ajax({
                url: deleteUrl,
                type: 'POST',
                data: { commentId: commentId },
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val() // CSRF token
                },
                success: function (response) {
                    if (response.success) {
                        Swal.fire(
                            'Deleted!',
                            response.message,
                            'success'
                        );

                        // Remove the comment from the DOM
                        $(`button[data-comment-id="${commentId}"]`).closest('.review').remove();
                        updateReviewCount();
                    } else {
                        Swal.fire(
                            'Error!',
                            response.message,
                            'error'
                        );
                    }
                },
                error: function () {
                    Swal.fire(
                        'Error!',
                        'An error occurred while trying to delete the comment.',
                        'error'
                    );
                }
            });
        }
    });
});

</script>

